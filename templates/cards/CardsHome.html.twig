{% extends "base.html.twig" %}

{% block title %}{% endblock %}

{% block body %}
    <div id="cardViewer" class="cardLanding">
        <div id="cardHome" class="cardHome">
            <h1>Cardgame</h1>
            
            <h2>About my cardgame</h3>
            <h3>Classes</h3>
            <p>The cardgame consists of the classes: Card, CardHand, DeckOfCards.</p>
            <p><i>Card</i> - has added optional variabes for future use in the form of $status and $relations since the assignment is likely to grow and include more complex handling. The class has been kept as simple as possible and all instantiation set to singular in methods throughout script to retain simplicity. Multiple calls are made through looping.
            <br>
            <p><i>CardHand</i> - takes the argument $handSize to enable playing different type of games.  added optional variabes for future use in the form of $status and $relations since the assignment is likely to grow and include more complex handling.
            <br>
            <p><i>DeckOfCards</i> - takes the argument "$deckType" which defines the type of deck to be created. The functionality can be extended to encompass more decktypes, the current available types are: 'Trad52' and 'Trad54' (Jokers).</p>
            <p>All CardGameController functionality is directed toward DeckOfCards and CardHand, the base-class Card is only called from within DeckOfCards on creation of a new deck. Post creation all card-functionality is done
            via objects in current deck.</p>
            
            <h3>Namespace App/Cards</h3>
            <ul>
                <li>App/Cards/Card</li>
                <li>App/Cards/CardHand</li>
                <li>App/Cards/DeckOfCards</li>
            </ul>

            <p>Below you can test the functionality built:</p>
                <ul>
                    <li>
                        <a href="{{path('cards_start')}}#deck">Create a deck!</a>
                    </li>
                    <li>
                        <a href="{{path('cards_start')}}#card">Draw a card!</a>
                    </li>
                    
                    <li>
                        <a href="{{path('cards_start')}}#hand">Deal a hand!</a>
                    </li>
                    <li>
                        <a href="{{path('cards_start')}}#sacrifice">Sacrifice cards!</a>
                    </li>
                    <li>
                        <a href="{{path('cards_start')}}#shuffle">Shuffle deck!</a>
                    </li>
                    <li>
                        <a href="{{path('cards_start')}}#sort">Sort deck!</a>
                    </li>
                    <li>
                        <a href="{{ path('draw_amount', { 'number': 5 }) }}">Draw amount of cards by adding /(int)!</a>
                    </li>
                    <li>
                        <a href="{{ path('shuffle_deck') }}">Shuffle deck by adding: /deck/shuffle to URL!</a>
                    </li>
                    <li>
                        <a href="{{ path('sort_deck') }}">Sort deck in template!</a>
                    </li>
                    <li>
                        <a href="{{ path('session_start') }}">Start a session!</a>
                    </li>
                    <li>
                        <a href="{{ path('session_delete') }}">Destroy your session!</a>
                    </li>  
                </ul>
            
            <p>Or view cardgame-classes as UML-diagrams</p>
                <ul>
                    <li>
                        <a href="{{ path('cards_start') }}#uml">Show UML of cardgame-classes!</a>
                    </li>
                </ul>

            <div id="card" class="cardView">
                {{ card }}
            </div>
            <div id="deck" class="cardView">
                {{ deck }}
            </div>
            <div id="hand" class="cardView">
                {{ hand }}
            </div>
            <div id="sacrifice" class="cardView">
                <p>Sacrifice</p>
            </div>
            <div id="draw" class="cardView">
                <p>Draw</p>
            </div>
            <div id="sort" class="cardView">
                {{ sorted }}
            </div>
            <div id="shuffle" class="cardView">
                {{ shuffled }}
            </div>
            <div id="sorted" class="cardView">
                {{ sorted }}
            </div>
            <div id="uml" class="UMLView">
            </div>

            <p>You can see the code at my github-repo <a href="https://github.com/bthalehog/mvc">MVC</a>.</p>
        </div>
    </div>

    <script>
        function viewSelector(id) {
            document.querySelectorAll('.cardView').forEach(cardView => {
                cardView.classList.remove('active');
                cardView.style.display = 'none';
            });

            const current = document.getElementById(id);

            if (current != null) {
                current.classList.add('active');
                current.style.display = 'flex';
            }
        }

        window.addEventListener('hashchange', () => {
            const hash = window.location.hash.substring(1);
            viewSelector(hash);
        });
        
        window.addEventListener('load', () => {
            const hash = window.location.hash.substring(1) || 'cardHome';
            viewSelector(hash);
        });
    </script>

{% endblock %}
